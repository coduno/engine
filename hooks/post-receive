#!/bin/bash

# Before disaster happens, exit this script
set -e

# $GIT_DIR is set to point to the repository that
# triggered the hook (relative to $PWD).
# Leaving this set will hurt your brains, trust me.
unset GIT_DIR

# Temporary clone target
CLONE=$(mktemp -p /tmp -d coduno.XXX)
TESTCLONE=$(mktemp -p /tmp -d coduno-test.XXX)

# As users are only allowed to push to their named branch
# there can only be one line of input, so we can safely
# omit a loop here. TODO: This constraint is no longer valid
read OLD NEW REF

# Now clone the repository to our temporary directory.
# Keep in mind that $PWD still points to the reposotiry
# because we are inside a hook.
git clone --no-checkout --quiet "$PWD" "$CLONE"

# Check out the reference the user has pushed, do it
# quietly as we do not really care about detaching HEAD
git -C "$CLONE" checkout --quiet "$NEW"

# Remove Git metadata, we don't need it anymore
rm -rf "$CLONE/.git"

# Fetch the test program for the current challenge
CHALLENGE="$(basename $PWD)"
git clone --quiet "$HOME/tests/$CHALLENGE" "$TESTCLONE"

# Let piper do the magic and execute the code
REPO="$(basename $(pwd))"
piper "$GITHUB_USERNAME" "$REPO" "$NEW" "$CLONE" "$TESTCLONE"
